name: Deploy to Production

on:
  push:
    branches: [ main, production ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.2'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, dom, fileinfo, mysql, zip, gd, curl, xml, bcmath, intl
        coverage: none
        
    - name: Install Composer dependencies
      run: |
        composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist
        
    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deployment
        
        # Copy production files only
        rsync -av \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='node_modules' \
          --exclude='tests' \
          --exclude='.env*' \
          --exclude='storage/logs/*' \
          --exclude='storage/framework/cache/*' \
          --exclude='storage/framework/sessions/*' \
          --exclude='storage/framework/views/*' \
          --exclude='bootstrap/cache/*' \
          --exclude='vendor' \
          --exclude='Homestead*' \
          --exclude='*.log' \
          --exclude='.DS_Store' \
          --exclude='Thumbs.db' \
          . deployment/
          
    - name: Deploy to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.FTP_DIRECTORY }}
        
    - name: Send Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ðŸš€ **SarvCast Deployment Successful**
          
          **Branch:** `${{ github.ref_name }}`
          **Commit:** `${{ github.sha }}`
          **Author:** ${{ github.actor }}
          
          **Changes:**
          ${{ github.event.head_commit.message }}
          
          **Status:** âœ… Deployed to production
          
          ðŸ”— [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          
    - name: Cleanup
      if: always()
      run: |
        rm -rf deployment/