openapi: 3.0.3
info:
  title: SarvCast API
  description: Persian children's audio story platform API
  version: 1.0.0
  contact:
    name: SarvCast API Support
    email: api-support@sarvcast.com
    url: https://sarvcast.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://sarvcast.com/api/v1
    description: Production server
  - url: http://localhost:8000/api/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phone
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  example: "John Doe"
                phone:
                  type: string
                  example: "+989123456789"
                password:
                  type: string
                  minLength: 8
                  example: "password123"
                password_confirmation:
                  type: string
                  example: "password123"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - password
              properties:
                phone:
                  type: string
                  example: "+989123456789"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /stories:
    get:
      tags:
        - Stories
      summary: Get stories list
      security: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
            maximum: 100
        - name: category_id
          in: query
          schema:
            type: integer
        - name: search
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
            enum: [title, created_at, popularity]
      responses:
        '200':
          description: Stories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoriesResponse'

  /stories/{id}:
    get:
      tags:
        - Stories
      summary: Get story details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Story details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryResponse'
        '404':
          description: Story not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /episodes:
    get:
      tags:
        - Episodes
      summary: Get episodes list
      security: []
      parameters:
        - name: story_id
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: Episodes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodesResponse'

  /episodes/{id}:
    get:
      tags:
        - Episodes
      summary: Get episode details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Episode details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeResponse'

  /episodes/{id}/play:
    get:
      tags:
        - Episodes
      summary: Play episode
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Episode play URL retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayResponse'

  /user:
    get:
      tags:
        - User
      summary: Get user profile
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - User
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /favorites/toggle:
    post:
      tags:
        - Favorites
      summary: Toggle favorite status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_id
              properties:
                story_id:
                  type: integer
      responses:
        '200':
          description: Favorite status toggled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /favorites:
    get:
      tags:
        - Favorites
      summary: Get user favorites
      responses:
        '200':
          description: User favorites retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoritesResponse'

  /search:
    get:
      tags:
        - Search
      summary: Global search
      security: []
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: [stories, episodes, people]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /health:
    get:
      tags:
        - System
      summary: Health check
      security: []
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /episodes/{episodeId}/image-timeline:
    get:
      tags:
        - Image Timeline
      summary: Get image timeline for episode
      parameters:
        - name: episodeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Timeline retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
    post:
      tags:
        - Image Timeline
      summary: Create or update image timeline
      parameters:
        - name: episodeId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimelineRequest'
      responses:
        '200':
          description: Timeline created/updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
    delete:
      tags:
        - Image Timeline
      summary: Delete image timeline
      parameters:
        - name: episodeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Timeline deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /episodes/{episodeId}/image-for-time:
    get:
      tags:
        - Image Timeline
      summary: Get image for specific time
      parameters:
        - name: episodeId
          in: path
          required: true
          schema:
            type: integer
        - name: time
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Image retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTimeResponse'
        '404':
          description: No image found for the specified time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /stories/{storyId}/comments:
    get:
      tags:
        - Story Comments
      summary: Get story comments
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: include_pending
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Comments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsResponse'
    post:
      tags:
        - Story Comments
      summary: Add comment to story
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'

  /comments/my-comments:
    get:
      tags:
        - Story Comments
      summary: Get user's comments
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: User comments retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCommentsResponse'

  /comments/{commentId}:
    delete:
      tags:
        - Story Comments
      summary: Delete user's comment
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comment deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        avatar:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time

    Story:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        cover_image:
          type: string
          format: uri
        category:
          $ref: '#/components/schemas/Category'
        episodes_count:
          type: integer
        duration:
          type: integer
        rating:
          type: number
          format: float
        is_premium:
          type: boolean
        created_at:
          type: string
          format: date-time

    Episode:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        audio_file:
          type: string
          format: uri
        duration:
          type: integer
        story:
          $ref: '#/components/schemas/Story'
        is_premium:
          type: boolean
        order:
          type: integer
        created_at:
          type: string
          format: date-time

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        icon:
          type: string
          format: uri

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    StoriesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            stories:
              type: array
              items:
                $ref: '#/components/schemas/Story'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    StoryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            story:
              $ref: '#/components/schemas/Story'

    EpisodesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            episodes:
              type: array
              items:
                $ref: '#/components/schemas/Episode'

    EpisodeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            episode:
              $ref: '#/components/schemas/Episode'

    PlayResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            episode:
              $ref: '#/components/schemas/Episode'
            play_url:
              type: string
              format: uri

    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'

    FavoritesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            favorites:
              type: array
              items:
                $ref: '#/components/schemas/Story'

    SearchResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            results:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Story'
                  - $ref: '#/components/schemas/Episode'

    HealthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            status:
              type: string
              example: "healthy"
            timestamp:
              type: string
              format: date-time
            services:
              type: object
              properties:
                database:
                  type: string
                redis:
                  type: string
                storage:
                  type: string
            version:
              type: string

    PaginationMeta:
      type: object
      properties:
        pagination:
          type: object
          properties:
            current_page:
              type: integer
            per_page:
              type: integer
            total:
              type: integer
            last_page:
              type: integer

    TimelineRequest:
      type: object
      required:
        - image_timeline
      properties:
        image_timeline:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEntry'
          minItems: 1

    TimelineEntry:
      type: object
      required:
        - start_time
        - end_time
        - image_url
      properties:
        start_time:
          type: integer
          minimum: 0
          description: Start time in seconds
        end_time:
          type: integer
          minimum: 1
          description: End time in seconds
        image_url:
          type: string
          format: uri
          maxLength: 500
          description: Image URL for this time period

    TimelineResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            episode_id:
              type: integer
            image_timeline:
              type: array
              items:
                $ref: '#/components/schemas/TimelineEntryResponse'

    TimelineEntryResponse:
      type: object
      properties:
        id:
          type: integer
        start_time:
          type: integer
        end_time:
          type: integer
        image_url:
          type: string
        image_order:
          type: integer

    ImageTimeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            episode_id:
              type: integer
            time:
              type: integer
            image_url:
              type: string

    CommentRequest:
      type: object
      required:
        - comment
      properties:
        comment:
          type: string
          minLength: 1
          maxLength: 1000
          description: Comment text

    CommentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            comment:
              $ref: '#/components/schemas/Comment'

    Comment:
      type: object
      properties:
        id:
          type: integer
        comment:
          type: string
        is_approved:
          type: boolean
        is_visible:
          type: boolean
        created_at:
          type: string
          format: date-time
        time_since_created:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            avatar:
              type: string

    CommentsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            story_id:
              type: integer
            comments:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
            pagination:
              $ref: '#/components/schemas/PaginationMeta'

    UserCommentsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          properties:
            comments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Comment'
                  - type: object
                    properties:
                      story:
                        type: object
                        properties:
                          id:
                            type: integer
                          title:
                            type: string
                          image_url:
                            type: string
            pagination:
              $ref: '#/components/schemas/PaginationMeta'
